<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List Application</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }

        h1 {
            color: #333;
        }

        #taskList {
            list-style-type: none;
            padding: 0;
        }

        #taskList li {
            background-color: #fff;
            padding: 10px;
            margin: 5px 0;
            border-radius: 4px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        #taskList li.completed {
            text-decoration: line-through;
            color: gray;
        }

        button {
            padding: 5px 10px;
            cursor: pointer;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 14px;
        }

        button:hover {
            background-color: #45a049;
        }

        input[type="text"] {
            padding: 10px;
            font-size: 14px;
            width: 80%;
            margin-right: 10px;
            border-radius: 4px;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>

    <h1>To-Do List</h1>

    <input type="text" id="taskInput" placeholder="Add a new task">
    <button onclick="addTask()">Add Task</button>

    <ul id="taskList"></ul>

    <script>
        // Array to hold tasks
        let tasks = [];

        // Function to add a new task
        function addTask() {
            const taskInput = document.getElementById('taskInput');
            const taskText = taskInput.value.trim();

            if (taskText === "") {
                alert("Please enter a task.");
                return;
            }

            // Create a task object
            const task = {
                id: Date.now(),
                text: taskText,
                completed: false
            };

            // Add the task to the tasks array
            tasks.push(task);

            // Clear the input field
            taskInput.value = "";

            // Update the displayed task list
            renderTaskList();
        }

        // Function to toggle the completed state of a task
        function toggleTaskCompletion(taskId) {
            const task = tasks.find(t => t.id === taskId);
            if (task) {
                task.completed = !task.completed;
            }
            renderTaskList();
        }

        // Function to remove a task
        function removeTask(taskId) {
            tasks = tasks.filter(t => t.id !== taskId);
            renderTaskList();
        }

        // Function to render the task list
        function renderTaskList() {
            const taskList = document.getElementById('taskList');
            taskList.innerHTML = ""; // Clear the list before re-rendering

            tasks.forEach(task => {
                const li = document.createElement('li');
                li.className = task.completed ? 'completed' : '';
                
                li.innerHTML = `
                    <span onclick="toggleTaskCompletion(${task.id})">${task.text}</span>
                    <button onclick="removeTask(${task.id})">Remove</button>
                `;
                taskList.appendChild(li);
            });
        }

        // Initial rendering of tasks (if any)
        renderTaskList();
    </script>

</body>
</html>

